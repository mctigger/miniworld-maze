[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "miniworld-drstrategy"
version = "1.0.0"
description = "Nine Rooms environment implementations from the DrStrategy paper"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "DrStrategy Implementation", email = "noreply@example.com"}
]
keywords = ["reinforcement-learning", "environment", "gymnasium", "nine-rooms", "drstrategy"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "gymnasium>=0.26.0",
    "numpy>=1.20.0",
    "opencv-python>=4.5.0",
    "Pillow>=8.0.0",
    "PyOpenGL>=3.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "isort",
    "flake8",
]
mujoco = [
    "mujoco>=2.3.0",
]

[project.urls]
Homepage = "https://github.com/example/miniworld-drstrategy"
Repository = "https://github.com/example/miniworld-drstrategy.git"
Documentation = "https://miniworld-drstrategy.readthedocs.io"

[project.scripts]
generate-observations = "miniworld_drstrategy.tools.generate_observations:main"

[tool.setuptools]
packages = ["miniworld_drstrategy"]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
miniworld_drstrategy = [
    "core/textures/*.png",
    "core/textures/portraits/*.png",
    "core/textures/portraits/*.license",
]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=miniworld_drstrategy"

[tool.coverage.run]
source = ["src/miniworld_drstrategy"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]